-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Address"
(
    address_id integer NOT NULL,
    address text COLLATE pg_catalog."default",
    province text COLLATE pg_catalog."default",
    district text COLLATE pg_catalog."default",
    zip character(5) COLLATE pg_catalog."default",
    telephone character(10) COLLATE pg_catalog."default",
    CONSTRAINT "Address_pkey" PRIMARY KEY (address_id)
);

CREATE TABLE IF NOT EXISTS public."Branch"
(
    branch_id character(2) COLLATE pg_catalog."default" NOT NULL,
    branch_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    address text COLLATE pg_catalog."default",
    street text COLLATE pg_catalog."default",
    district text COLLATE pg_catalog."default",
    province text COLLATE pg_catalog."default",
    zip character(5) COLLATE pg_catalog."default",
    branch_phone character(10) COLLATE pg_catalog."default",
    branch_email text COLLATE pg_catalog."default",
    open_office_hour time without time zone NOT NULL,
    close_office_hour time without time zone NOT NULL,
    CONSTRAINT "Branch_pkey" PRIMARY KEY (branch_id)
);

CREATE TABLE IF NOT EXISTS public."CatSubCat"
(
    "Category_category_id" character(5) COLLATE pg_catalog."default" NOT NULL,
    "SubCategory_1_subcategory_id" character(5) COLLATE pg_catalog."default" NOT NULL
);

CREATE TABLE IF NOT EXISTS public."Category"
(
    category_id character(5) COLLATE pg_catalog."default" NOT NULL,
    category_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Category_pkey" PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public."Collection"
(
    collection_id character(4) COLLATE pg_catalog."default" NOT NULL,
    collection_name text COLLATE pg_catalog."default" NOT NULL,
    collection_desc text COLLATE pg_catalog."default",
    CONSTRAINT "Collection_pkey" PRIMARY KEY (collection_id)
);

CREATE TABLE IF NOT EXISTS public."Color"
(
    color_id character(6) COLLATE pg_catalog."default" NOT NULL,
    color_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Color_pkey" PRIMARY KEY (color_id)
);

CREATE TABLE IF NOT EXISTS public."Employee"
(
    employee_id character(6) COLLATE pg_catalog."default" NOT NULL,
    emp_first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    emp_last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    telephone character(10) COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    street text COLLATE pg_catalog."default",
    district text COLLATE pg_catalog."default",
    province text COLLATE pg_catalog."default",
    zip character(5) COLLATE pg_catalog."default",
    position_id character(4) COLLATE pg_catalog."default" NOT NULL,
    branch_id character(2) COLLATE pg_catalog."default",
    CONSTRAINT "Employee_pkey" PRIMARY KEY (employee_id)
);

CREATE TABLE IF NOT EXISTS public."Member"
(
    member_id character(10) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    date_of_birth timestamp without time zone NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    telephone character(10) COLLATE pg_catalog."default" NOT NULL,
    member_date timestamp without time zone NOT NULL,
    CONSTRAINT "Member_pkey" PRIMARY KEY (member_id)
);

CREATE TABLE IF NOT EXISTS public."MemberAddress"
(
    mem_add_id integer NOT NULL,
    address_id integer NOT NULL,
    member_id character(10) COLLATE pg_catalog."default" NOT NULL,
    "isDefault" boolean,
    CONSTRAINT "MemberAddress_pkey" PRIMARY KEY (mem_add_id)
);

CREATE TABLE IF NOT EXISTS public."Order"
(
    order_id character(18) COLLATE pg_catalog."default" NOT NULL,
    order_date timestamp without time zone NOT NULL,
    payment_id character(2) COLLATE pg_catalog."default" NOT NULL,
    order_type_id character(2) COLLATE pg_catalog."default" NOT NULL,
    employee_id character(6) COLLATE pg_catalog."default",
    shipping_method_id character(2) COLLATE pg_catalog."default",
    mem_add_id integer NOT NULL,
    giftcard_id character(10),
    CONSTRAINT "Order_pkey" PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public."OrderStatus"
(
    order_id character(18) COLLATE pg_catalog."default" NOT NULL,
    "timestamp" timestamp without time zone NOT NULL,
    status_id character(1) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "OrderStatus_pkey" PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public."Order_type"
(
    order_type_id character(2) COLLATE pg_catalog."default" NOT NULL,
    order_type_desc text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Order_type_pkey" PRIMARY KEY (order_type_id)
);

CREATE TABLE IF NOT EXISTS public."Parameter"
(
)
;

CREATE TABLE IF NOT EXISTS public."Payment"
(
    payment_id character(2) COLLATE pg_catalog."default" NOT NULL,
    payment_desc text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Payment_pkey" PRIMARY KEY (payment_id)
);

CREATE TABLE IF NOT EXISTS public."PointHistory"
(
    product_id character(10) COLLATE pg_catalog."default" NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    point integer NOT NULL,
    CONSTRAINT "PointHistory_pkey" PRIMARY KEY (product_id, start_date)
);

CREATE TABLE IF NOT EXISTS public."PointLog"
(
    log_id integer NOT NULL,
    movement integer NOT NULL,
    remark text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PointLog_pkey" PRIMARY KEY (log_id)
);

CREATE TABLE IF NOT EXISTS public."Position"
(
    position_id character(4) COLLATE pg_catalog."default" NOT NULL,
    position_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Position_pkey" PRIMARY KEY (position_id)
);

CREATE TABLE IF NOT EXISTS public."PriceHistory"
(
    product_id character(10) COLLATE pg_catalog."default" NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    normal_price integer NOT NULL,
    membership_price integer,
    CONSTRAINT "PriceHistory_pkey" PRIMARY KEY (product_id, start_date)
);

CREATE TABLE IF NOT EXISTS public."Product"
(
    product_id character(10) COLLATE pg_catalog."default" NOT NULL,
    product_name_eng character varying(100) COLLATE pg_catalog."default" NOT NULL,
    product_name_th character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descr text COLLATE pg_catalog."default",
    width numeric(5, 2),
    length numeric(5, 2),
    height numeric(5, 2),
    color_id character(6) COLLATE pg_catalog."default",
    "isRecommended" boolean,
    CONSTRAINT "Product_pkey" PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public."ProductCategory"
(
    product_id character(10) COLLATE pg_catalog."default" NOT NULL,
    subcategory_id character(5) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "ProductCategory_pkey" PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public."Product_Collection"
(
    "Product_product_id" character(10) COLLATE pg_catalog."default" NOT NULL,
    "Collection_collection_id" character(4) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Product_Collection_pkey" PRIMARY KEY ("Product_product_id", "Collection_collection_id")
);

CREATE TABLE IF NOT EXISTS public."Product_Order"
(
    "Product_Order_id" bigint NOT NULL,
    "Product_product_id" character(10) COLLATE pg_catalog."default" NOT NULL,
    "Order_order_id" character(18) COLLATE pg_catalog."default" NOT NULL,
    qty integer NOT NULL,
    branch_id character(2) COLLATE pg_catalog."default" NOT NULL,
    prod_promo integer,
    CONSTRAINT "Product_Order_pkey" PRIMARY KEY ("Product_Order_id")
);

CREATE TABLE IF NOT EXISTS public."Product_order_return"
(
    product_order_id bigint NOT NULL,
    return_date timestamp without time zone NOT NULL,
    qty integer NOT NULL,
    reason text COLLATE pg_catalog."default",
    CONSTRAINT "Product_order_return_pkey" PRIMARY KEY (product_order_id)
);

CREATE TABLE IF NOT EXISTS public."Shipping_method"
(
    shipping_method_id character(2) COLLATE pg_catalog."default" NOT NULL,
    shipping_method_desc text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Shipping_method_pkey" PRIMARY KEY (shipping_method_id)
);

CREATE TABLE IF NOT EXISTS public."Status"
(
    status_id character(1) COLLATE pg_catalog."default" NOT NULL,
    status_description character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Status_pkey" PRIMARY KEY (status_id)
);

CREATE TABLE IF NOT EXISTS public."Stock"
(
    stock_record_id bigint NOT NULL,
    product_id character(10) COLLATE pg_catalog."default" NOT NULL,
    warehouse_id character(2) COLLATE pg_catalog."default" NOT NULL,
    qty integer NOT NULL,
    recieve_date timestamp without time zone NOT NULL,
    CONSTRAINT "Stock_pkey" PRIMARY KEY (stock_record_id)
);

CREATE TABLE IF NOT EXISTS public."SubCategory_1"
(
    subcategory_id character(5) COLLATE pg_catalog."default" NOT NULL,
    descr text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SubCategory_1_pkey" PRIMARY KEY (subcategory_id)
);

CREATE TABLE IF NOT EXISTS public."SubCategory_2"
(
    subcategory_id character varying(5) COLLATE pg_catalog."default" NOT NULL,
    descr text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SubCategory_2_pkey" PRIMARY KEY (subcategory_id)
);

CREATE TABLE IF NOT EXISTS public."SubCategory_2_1"
(
    "SubCat_2_id" character varying(5) COLLATE pg_catalog."default" NOT NULL,
    "SubCat_1_id" character(5) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SubCategory_2_1_pkey" PRIMARY KEY ("SubCat_2_id", "SubCat_1_id")
);

CREATE TABLE IF NOT EXISTS public."SubCategory_3"
(
    subcategory_id character(5) COLLATE pg_catalog."default" NOT NULL,
    descr text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SubCategory_3_pkey" PRIMARY KEY (subcategory_id)
);

CREATE TABLE IF NOT EXISTS public."SubCategory_3_2"
(
    "SubCat_3_id" character(5) COLLATE pg_catalog."default" NOT NULL,
    "SubCat_2_id" character varying(5) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SubCategory_3_2_pkey" PRIMARY KEY ("SubCat_3_id", "SubCat_2_id")
);

CREATE TABLE IF NOT EXISTS public."SubCategory_4"
(
    subcategory_id character(5) COLLATE pg_catalog."default" NOT NULL,
    descr text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SubCategory_4_pkey" PRIMARY KEY (subcategory_id)
);

CREATE TABLE IF NOT EXISTS public."SubCategory_4_3"
(
    "SubCat_4_id" character(5) COLLATE pg_catalog."default" NOT NULL,
    "SubCat_3_id" character(5) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SubCategory_4_3_pkey" PRIMARY KEY ("SubCat_4_id", "SubCat_3_id")
);

CREATE TABLE IF NOT EXISTS public."Warehouse"
(
    warehouse_id character(2) COLLATE pg_catalog."default" NOT NULL,
    branch_id character(2) COLLATE pg_catalog."default" NOT NULL,
    warehouse_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    address text COLLATE pg_catalog."default",
    street text COLLATE pg_catalog."default",
    province text COLLATE pg_catalog."default",
    district text COLLATE pg_catalog."default",
    zip character(6) COLLATE pg_catalog."default",
    warehouse_phone character(10) COLLATE pg_catalog."default",
    warehouse_email text COLLATE pg_catalog."default",
    open_office_hour time without time zone,
    close_office_hour time without time zone,
    CONSTRAINT "Warehouse_pkey" PRIMARY KEY (warehouse_id)
);

CREATE TABLE IF NOT EXISTS public."Warehouse_branch"
(
    warehouse_id character(2) COLLATE pg_catalog."default" NOT NULL,
    branch_id character(2) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Warehouse_branch_pkey" PRIMARY KEY (warehouse_id, branch_id)
);

CREATE TABLE IF NOT EXISTS public."Warranty"
(
    warranty_id character(2) COLLATE pg_catalog."default" NOT NULL,
    product_id character(10) COLLATE pg_catalog."default" NOT NULL,
    warranty_length_year integer,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    CONSTRAINT "Warranty_pkey" PRIMARY KEY (warranty_id)
);

CREATE TABLE IF NOT EXISTS public."Warranty_record"
(
    warranty_record_id bigint NOT NULL,
    order_id character(18) COLLATE pg_catalog."default" NOT NULL,
    product_id character(10) COLLATE pg_catalog."default" NOT NULL,
    warranty_record_date timestamp without time zone NOT NULL,
    CONSTRAINT "Warranty_record_pkey" PRIMARY KEY (warranty_record_id)
);

CREATE TABLE IF NOT EXISTS public."Promotion"
(
    promotion_id integer NOT NULL,
    promotion_type_id character(2) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    PRIMARY KEY (promotion_id)
);

CREATE TABLE IF NOT EXISTS public."ProductPromotion"
(
    prod_promo integer NOT NULL,
    promotion_id integer NOT NULL,
    product_id character(10) NOT NULL,
    amount integer NOT NULL,
    PRIMARY KEY (prod_promo)
);

CREATE TABLE IF NOT EXISTS public."PromotionType"
(
    promotion_type_id character(2) NOT NULL,
    descr text,
    PRIMARY KEY (promotion_type_id)
);

CREATE TABLE IF NOT EXISTS public."Giftcard"
(
    giftcard_id character(10) NOT NULL,
    amount integer NOT NULL,
    publish_date timestamp without time zone NOT NULL,
    expire_date timestamp without time zone NOT NULL,
    PRIMARY KEY (giftcard_id)
);

ALTER TABLE IF EXISTS public."CatSubCat"
    ADD CONSTRAINT "CatSubCat_Category_category_id_fkey" FOREIGN KEY ("Category_category_id")
    REFERENCES public."Category" (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."CatSubCat"
    ADD CONSTRAINT "CatSubCat_SubCategory_1_subcategory_id_fkey" FOREIGN KEY ("SubCategory_1_subcategory_id")
    REFERENCES public."SubCategory_1" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employee"
    ADD CONSTRAINT "Employee_position_id_fkey" FOREIGN KEY (position_id)
    REFERENCES public."Position" (position_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employee"
    ADD CONSTRAINT "Employee_position_id_fkey1" FOREIGN KEY (position_id)
    REFERENCES public."Position" (position_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."MemberAddress"
    ADD CONSTRAINT "MemberAddress_address_id_fkey" FOREIGN KEY (address_id)
    REFERENCES public."Address" (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."MemberAddress"
    ADD CONSTRAINT "MemberAddress_member_id_fkey" FOREIGN KEY (member_id)
    REFERENCES public."Member" (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_employee_id_fkey" FOREIGN KEY (employee_id)
    REFERENCES public."Employee" (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_employee_id_fkey1" FOREIGN KEY (employee_id)
    REFERENCES public."Employee" (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_mem_add_id_fkey" FOREIGN KEY (mem_add_id)
    REFERENCES public."MemberAddress" (mem_add_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_order_type_id_fkey" FOREIGN KEY (order_type_id)
    REFERENCES public."Order_type" (order_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_order_type_id_fkey1" FOREIGN KEY (order_type_id)
    REFERENCES public."Order_type" (order_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_payment_id_fkey" FOREIGN KEY (payment_id)
    REFERENCES public."Payment" (payment_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_payment_id_fkey1" FOREIGN KEY (payment_id)
    REFERENCES public."Payment" (payment_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_shipping_method_id_fkey" FOREIGN KEY (shipping_method_id)
    REFERENCES public."Shipping_method" (shipping_method_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT "Order_shipping_method_id_fkey1" FOREIGN KEY (shipping_method_id)
    REFERENCES public."Shipping_method" (shipping_method_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD FOREIGN KEY (giftcard_id)
    REFERENCES public."Giftcard" (giftcard_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."OrderStatus"
    ADD CONSTRAINT "OrderStatus_order_id_fkey" FOREIGN KEY (order_id)
    REFERENCES public."Order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "OrderStatus_pkey"
    ON public."OrderStatus"(order_id);


ALTER TABLE IF EXISTS public."OrderStatus"
    ADD CONSTRAINT "OrderStatus_status_id_fkey" FOREIGN KEY (status_id)
    REFERENCES public."Status" (status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PointHistory"
    ADD CONSTRAINT "PointHistory_product_id_fkey" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PointLog"
    ADD CONSTRAINT "PointLog_remark_fkey" FOREIGN KEY (remark)
    REFERENCES public."Order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PriceHistory"
    ADD CONSTRAINT "PriceHistory_product_id_fkey" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PriceHistory"
    ADD CONSTRAINT "PriceHistory_product_id_fkey1" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product"
    ADD CONSTRAINT "Product_color_id_fkey" FOREIGN KEY (color_id)
    REFERENCES public."Color" (color_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product"
    ADD CONSTRAINT "Product_color_id_fkey1" FOREIGN KEY (color_id)
    REFERENCES public."Color" (color_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ProductCategory"
    ADD CONSTRAINT "ProductCategory_product_id_fkey" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "ProductCategory_pkey"
    ON public."ProductCategory"(product_id);


ALTER TABLE IF EXISTS public."ProductCategory"
    ADD CONSTRAINT "ProductCategory_subcategory_id_fkey" FOREIGN KEY (subcategory_id)
    REFERENCES public."SubCategory_4" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ProductCategory"
    ADD CONSTRAINT "ProductCategory_subcategory_id_fkey1" FOREIGN KEY (subcategory_id)
    REFERENCES public."SubCategory_3" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ProductCategory"
    ADD CONSTRAINT "ProductCategory_subcategory_id_fkey2" FOREIGN KEY (subcategory_id)
    REFERENCES public."SubCategory_2" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ProductCategory"
    ADD CONSTRAINT "ProductCategory_subcategory_id_fkey3" FOREIGN KEY (subcategory_id)
    REFERENCES public."SubCategory_1" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_Collection"
    ADD CONSTRAINT "Product_Collection_Collection_collection_id_fkey" FOREIGN KEY ("Collection_collection_id")
    REFERENCES public."Collection" (collection_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_Collection"
    ADD CONSTRAINT "Product_Collection_Collection_collection_id_fkey1" FOREIGN KEY ("Collection_collection_id")
    REFERENCES public."Collection" (collection_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_Collection"
    ADD CONSTRAINT "Product_Collection_Product_product_id_fkey" FOREIGN KEY ("Product_product_id")
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_Collection"
    ADD CONSTRAINT "Product_Collection_Product_product_id_fkey1" FOREIGN KEY ("Product_product_id")
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_Order"
    ADD CONSTRAINT "Product_Order_Order_order_id_fkey" FOREIGN KEY ("Order_order_id")
    REFERENCES public."Order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_Order"
    ADD CONSTRAINT "Product_Order_Product_product_id_fkey" FOREIGN KEY ("Product_product_id")
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_Order"
    ADD CONSTRAINT "Product_Order_branch_id_fkey" FOREIGN KEY (branch_id)
    REFERENCES public."Branch" (branch_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_Order"
    ADD FOREIGN KEY (prod_promo)
    REFERENCES public."ProductPromotion" (prod_promo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Product_order_return"
    ADD CONSTRAINT "Product_order_return_product_order_id_fkey" FOREIGN KEY (product_order_id)
    REFERENCES public."Product_Order" ("Product_Order_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "Product_order_return_pkey"
    ON public."Product_order_return"(product_order_id);


ALTER TABLE IF EXISTS public."Stock"
    ADD CONSTRAINT "Stock_product_id_fkey" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Stock"
    ADD CONSTRAINT "Stock_product_id_fkey1" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Stock"
    ADD CONSTRAINT "Stock_warehouse_id_fkey" FOREIGN KEY (warehouse_id)
    REFERENCES public."Warehouse" (warehouse_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SubCategory_2_1"
    ADD CONSTRAINT "SubCategory_2_1_SubCat_1_id_fkey" FOREIGN KEY ("SubCat_1_id")
    REFERENCES public."SubCategory_1" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SubCategory_2_1"
    ADD CONSTRAINT "SubCategory_2_1_SubCat_2_id_fkey" FOREIGN KEY ("SubCat_2_id")
    REFERENCES public."SubCategory_2" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SubCategory_3_2"
    ADD CONSTRAINT "SubCategory_3_2_SubCat_2_id_fkey" FOREIGN KEY ("SubCat_2_id")
    REFERENCES public."SubCategory_2" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SubCategory_3_2"
    ADD CONSTRAINT "SubCategory_3_2_SubCat_3_id_fkey" FOREIGN KEY ("SubCat_3_id")
    REFERENCES public."SubCategory_3" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SubCategory_4_3"
    ADD CONSTRAINT "SubCategory_4_3_SubCat_3_id_fkey" FOREIGN KEY ("SubCat_3_id")
    REFERENCES public."SubCategory_4" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SubCategory_4_3"
    ADD CONSTRAINT "SubCategory_4_3_SubCat_3_id_fkey1" FOREIGN KEY ("SubCat_3_id")
    REFERENCES public."SubCategory_3" (subcategory_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Warehouse_branch"
    ADD CONSTRAINT "Warehouse_branch_branch_id_fkey" FOREIGN KEY (branch_id)
    REFERENCES public."Branch" (branch_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Warehouse_branch"
    ADD CONSTRAINT "Warehouse_branch_warehouse_id_fkey" FOREIGN KEY (warehouse_id)
    REFERENCES public."Warehouse" (warehouse_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Warranty"
    ADD CONSTRAINT "Warranty_product_id_fkey" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Warranty_record"
    ADD CONSTRAINT "Warranty_record_order_id_fkey" FOREIGN KEY (order_id)
    REFERENCES public."Order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Warranty_record"
    ADD CONSTRAINT "Warranty_record_order_id_fkey1" FOREIGN KEY (order_id)
    REFERENCES public."Order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Warranty_record"
    ADD CONSTRAINT "Warranty_record_product_id_fkey" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Warranty_record"
    ADD CONSTRAINT "Warranty_record_product_id_fkey1" FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Promotion"
    ADD FOREIGN KEY (promotion_type_id)
    REFERENCES public."PromotionType" (promotion_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ProductPromotion"
    ADD FOREIGN KEY (promotion_id)
    REFERENCES public."Promotion" (promotion_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."ProductPromotion"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Product" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;